#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        esc_tilde: esc_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "ESC_TILDE";
            bindings = <&kp ESC>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        slash_equal: slash_equal {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_EQUAL";
            bindings = <&kp BACKSLASH>, <&kp EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        num_caps: num_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_CAPS";
            #binding-cells = <0>;
            bindings = <&lt 1 CAPS>, <&tog 3>;
        };

        t_f4: t_f4 {
            compatible = "zmk,behavior-mod-morph";
            label = "T_F4";
            bindings = <&kp T>, <&kp LA(F4)>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI|MOD_LGUI)>;
        };

        q_calc: q_calc {
            compatible = "zmk,behavior-mod-morph";
            label = "Q_CALC";
            bindings = <&kp Q>, <&kp K_CALC>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI|MOD_LGUI)>;
        };

        mouse_tog: mouse_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "MOUSE_TOG";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&tog 2>;
        };

        caps_word_2: caps_word_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "CAPS_WORD_2";
            bindings = <&num_caps>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        caps_num: caps_num {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPS_NUM";
            bindings = <&mo>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        caps_tog: caps_tog {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_TOG";
            #binding-cells = <0>;
            bindings = <&caps_num 1 0>, <&tog 3>;
        };

        kp_menu: kp_menu {
            compatible = "zmk,behavior-tap-dance";
            label = "KP_MENU";
            #binding-cells = <0>;
            bindings = <&mt LGUI C_MENU>, <&kp K_MENU>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "SCROLL_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
    };

    combos {
        compatible = "zmk,combos";

        all {
            bindings = <&kp LC(A)>;
            key-positions = <14 15>;
            layers = <0 1 2>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <30 29>;
            layers = <0 1 2>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <29 28>;
            layers = <0 2 1>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <28 27>;
            layers = <0 2 1>;
        };

        sys_reset {
            bindings = <&sys_reset>;
            key-positions = <0 1 12 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&esc_tilde               &q_calc  &kp W           &kp E        &kp R             &t_f4          &kp UP_ARROW     &kp Y        &kp U              &kp I            &kp O              &kp P     &slash_equal
&kp TAB                  &kp A    &kp S           &kp D        &kp F             &kp G          &kp DOWN_ARROW   &kp H        &kp J              &kp K            &kp L              &kp SEMI  &mouse_tog
&mt LEFT_GUI UNDERSCORE  &kp Z    &mt LEFT_ALT X  &mt LCTRL C  &mt LEFT_SHIFT V  &kp B          &kp LEFT_ARROW   &kp N        &mt RIGHT_SHIFT M  &mt RCTRL COMMA  &mt RIGHT_ALT DOT  &kp FSLH  &kp MINUS
                                  &kp SPACE       &kp_menu     &caps_tog         &lt 3 SPACE    &kp RIGHT_ARROW  &lt 3 ENTER  &kp BACKSPACE      &kp DEL
                                                                                                &kp ENTER
            >;

            label = "QWERTY";
            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "LOWER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp N1           &kp N2       &kp N3    &kp N4                     &kp N5              &mmv MOVE_UP     &kp N6             &kp N7                       &kp N8        &kp N9                &kp N0                 &kp EQUAL
&kp HOME   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR                 &kp PERCENT         &mmv MOVE_DOWN   &kp CARET          &kp AMPERSAND                &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PG_UP
&kp END    &trans           &trans       &trans    &mt LEFT_SHIFT LEFT_BRACE  &kp LEFT_BRACKET    &mmv MOVE_LEFT   &kp RIGHT_BRACKET  &mt RIGHT_SHIFT RIGHT_BRACE  &trans        &trans                &trans                 &kp PG_DN
                            &kp C_MUTE   &trans    &trans                     &trans              &mmv MOVE_RIGHT  &kp INS            &kp DEL                      &trans
                                                                                                  &mkp LCLK
            >;

            label = "NUMBER";
            sensor-bindings = <&inc_dec_kp LC(R) LC(Z)>;
        };

        mouse_layer {
            display-name = "MOUSE";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans     &trans    &trans    &trans    &trans      &trans
&out OUT_TOG    &bt BT_CLR    &trans        &mkp MB3      &mkp MB2      &mkp MB1        &mmv MOVE_DOWN   &mkp MB1   &mkp MB2  &mkp MB3  &trans    &trans      &to 0
&bootloader     &sys_reset    &out OUT_BLE  &none         &mkp MB5      &mkp MB4        &mmv MOVE_LEFT   &mkp MB4   &mkp MB5  &kp LBRC  &kp RBRC  &sys_reset  &bootloader
                              &trans        &trans        &trans        &kp SPACE       &mmv MOVE_RIGHT  &kp ENTER  &trans    &trans
                                                                                        &mkp MB2
            >;

            label = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };

        FN {
            display-name = "Fn";
            bindings = <
&to 0   &kp F1  &kp F2           &kp F3       &kp F4              &kp F5     &kp UP          &kp LEFT_PARENTHESIS   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp SLASH     &kp EQUAL
&trans  &kp F6  &kp F7           &kp F8       &kp F9              &kp F10    &kp DOWN        &kp RIGHT_PARENTHESIS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp PLUS
&trans  &trans  &trans           &bootloader  &mt LEFT_SHIFT F11  &kp F12    &kp LEFT        &kp KP_NUMBER_0        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp MINUS
                &rgb_ug RGB_TOG  &trans       &trans              &trans     &kp RIGHT       &kp KP_ENTER           &kp BACKSPACE    &kp DEL
                                                                             &kp KP_NUMLOCK
            >;

            label = "FN";
            sensor-bindings = <&rgb_encoder>;
        };

        MISC {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &msc SCRL_UP    &trans  &trans  &trans  &trans  &trans  &sys_reset
&out OUT_TOG    &bt BT_CLR    &trans        &trans        &trans        &trans          &msc SCRL_DOWN  &trans  &trans  &trans  &trans  &trans  &trans
&bootloader     &trans        &trans        &trans        &trans        &trans          &bt BT_PRV      &trans  &trans  &trans  &trans  &trans  &bootloader
                              &trans        &trans        &trans        &trans          &bt BT_NXT      &trans  &trans  &trans
                                                                                        &trans
            >;

            label = "BT";
        };
    };
};
